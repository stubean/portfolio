{"version":3,"sources":["Images/Groomsmen short.png","Components/Header.js","Pages/Work.js","Pages/About.js","Pages/Contact.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pathName","location","pathname","navOptions","navName","isSelected","menuClass","navOptionsHTML","i","length","includes","push","react_default","a","createElement","className","key","react_router_dom","to","id","Component","withRouter","Work","About","src","picture","alt","Contact","FormSubmittedContainerClass","ContactFormClass","type","action","method","href","name","value","Main","react_router","exact","path","component","App","Components_Header","Components_Main","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4SCIlCC,qBAEF,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAmCN,IA9BA,IAAMO,EAAWJ,KAAKH,MAAMQ,SAASC,SAEjCC,EAAa,CACb,CACIC,QAAS,OACTJ,SAAU,IACVK,YAAY,EACZC,UAAW,aAEf,CACIF,QAAS,OACTJ,SAAU,QACVK,YAAY,EACZC,UAAW,aAEf,CACIF,QAAS,QACTJ,SAAU,SACVK,YAAY,EACZC,UAAW,aAEf,CACIF,QAAS,UACTJ,SAAU,WACVK,YAAY,EACZC,UAAW,cAIfC,EAAiB,GACZC,EAAI,EAAGA,EAAIL,EAAWM,OAAQD,IAEtB,KAAVR,GAA2C,KAA1BG,EAAWK,GAAGR,SAC9BG,EAAWK,GAAGF,WAAcN,EAASU,SAASP,EAAWK,GAAGR,UAAY,qBAAuB,GACjF,KAAVA,GAA2C,KAA1BG,EAAWK,GAAGR,WACnCG,EAAWK,GAAGF,WAAcN,EAASU,SAASP,EAAWK,GAAGR,UAAY,qBAAuB,IAGnGO,EAAeI,KACXC,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAWK,GAAGF,UAAWU,IAAKb,EAAWK,GAAGJ,SAASQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAIf,EAAWK,GAAGR,UAAWG,EAAWK,GAAGJ,WAK7H,OACIQ,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,MAAIK,GAAG,YAAP,kBAEAP,EAAAC,EAAAC,cAAA,OAAKK,GAAG,WACJP,EAAAC,EAAAC,cAAA,UACKP,YA1DJa,cAmENC,cAAW7B,GC1DT8B,mLAVX,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6CAJSM,8BCeFG,mLAXX,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCAEEF,EAAAC,EAAAC,cAAA,OAAKU,IAAKC,IAASC,IAAI,0BANfN,aC+CLO,0LA3CX,IAEIC,EAA8B,GAC9BC,EAAmB,GASvB,OAZiBjC,KAAKH,MAAMQ,SAASC,SAMxBQ,SAAS,qBACpBmB,EAAmB,WAEnBD,EAA8B,WAI9BhB,EAAAC,EAAAC,cAAA,OAAKK,GAAG,eACJP,EAAAC,EAAAC,cAAA,OAAKK,GAAG,yBAAyBJ,UAAWa,GAA5C,wBAGEhB,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,UAASlB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,YAAT,mBAIxBN,EAAAC,EAAAC,cAAA,QAAMK,GAAG,cAAcJ,UAAWc,EAAkBE,OAAO,qFAAqFC,OAAO,QACvJpB,EAAAC,EAAAC,cAAA,gDACoCF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,iCAAR,0BADpC,8BAIErB,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,SAASI,KAAK,cAAcC,MAAM,4CAC9CvB,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,QAAQI,KAAK,UAE3BtB,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,YAAUoB,KAAK,aAEftB,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,SAASK,MAAM,aAA5B,iBAtCUf,cCiBLgB,mLAbX,OACExB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjCV,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWlB,IAC/BV,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWjB,IAChCX,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWb,aARzBP,aCUJqB,0LATX,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAC6B,EAAD,cALYvB,cCOEwB,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCXNC,IAASC,OACLrC,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACoC,EAAD,OAEFC,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.762ae734.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Groomsmen short.0e93a90a.png\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport '../Styles/Header.css';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        const pathName = this.props.location.pathname;\r\n\r\n        let navOptions = [\r\n            {\r\n                navName: 'Home',\r\n                pathName: '/',\r\n                isSelected: false,\r\n                menuClass: 'navOption'\r\n            },\r\n            {\r\n                navName: 'Work',\r\n                pathName: '/work',\r\n                isSelected: false,\r\n                menuClass: 'navOption'\r\n            },\r\n            {\r\n                navName: 'About',\r\n                pathName: '/about',\r\n                isSelected: false,\r\n                menuClass: 'navOption'\r\n            },\r\n            {\r\n                navName: 'Contact',\r\n                pathName: '/contact',\r\n                isSelected: false,\r\n                menuClass: 'navOption'\r\n            },\r\n        ];\r\n\r\n        let navOptionsHTML = [];\r\n        for (let i = 0; i < navOptions.length; i++) {\r\n\r\n            if(pathName!='/' && navOptions[i].pathName != '/')//if we are just a slash, this will be the home page\r\n                navOptions[i].menuClass += (pathName.includes(navOptions[i].pathName) ? ' navOptionSelected' : '');\r\n            else if(pathName=='/' && navOptions[i].pathName == '/'){\r\n                navOptions[i].menuClass += (pathName.includes(navOptions[i].pathName) ? ' navOptionSelected' : '');\r\n            }\r\n\r\n            navOptionsHTML.push(\r\n                <li className={navOptions[i].menuClass} key={navOptions[i].navName}><Link to={navOptions[i].pathName}>{navOptions[i].navName}</Link></li>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <header>\r\n                <h1 id=\"pageName\">Stuart's Brain</h1>\r\n\r\n                <nav id=\"pageNav\">\r\n                    <ul>\r\n                        {navOptionsHTML}\r\n                    </ul>\r\n                </nav>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React, { Component } from 'react';\r\nclass Work extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>\r\n            Look at all this work!\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Work;\r\n  ","import React, { Component } from 'react';\r\nimport picture from '../Images/Groomsmen short.png'\r\n\r\nclass About extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>\r\n            Read all about me!\r\n            <img src={picture} alt=\"Stuart Foley\"></img>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default About;\r\n  ","import React, { Component } from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport '../Styles/Contact.css'\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n\r\n    const pathName = this.props.location.pathname;\r\n\r\n    let FormSubmittedContainerClass = '',\r\n        ContactFormClass = '';\r\n\r\n\r\n    if (pathName.includes('contact/submitted'))//if we've submitted a contact info\r\n      ContactFormClass = ' hidden ';      \r\n    else\r\n      FormSubmittedContainerClass = ' hidden ';\r\n      \r\n\r\n    return (\r\n      <div id=\"ContactPage\">\r\n          <div id=\"FormSubmittedContainer\" className={FormSubmittedContainerClass}>\r\n            THANKS FOR SUBMITTING\r\n\r\n            <button type=\"button\"><Link to=\"/contact\">Submit Again?</Link></button>\r\n          </div>\r\n\r\n          \r\n          <form id=\"ContactForm\" className={ContactFormClass} action=\"https://getsimpleform.com/messages?form_api_token=4ee7504079217a75321b1efa4196121c\" method=\"post\">\r\n          <div>\r\n            If you'd like to email me send to <a href=\"mailto:stuartdfoley@gmail.com\">StuartDFoley@gmail.com</a> or submit the form below!\r\n          </div>\r\n            {/* <input type='hidden' name='redirect_to' value='https://stubean.github.io/portfolio/contact/submitted' /> */}\r\n            <input type='hidden' name='redirect_to' value='http://localhost:3000/contact/submitted' />\r\n            <div>\r\n              email\r\n              <input type='email' name='from' />\r\n            </div>\r\n            <div>\r\n              message:\r\n            <textarea name='message'></textarea>\r\n            </div>\r\n            <button type='submit' value='Test form'>Send</button>\r\n          </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Work from '../Pages/Work.js';\r\nimport About from '../Pages/About';\r\nimport Contact from '../Pages/Contact';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n        <Switch>\r\n          <Route exact path='/' component={Work}/>\r\n          <Route path='/work' component={Work}/>\r\n          <Route path='/about' component={About}/>\r\n          <Route path='/contact' component={Contact}/>\r\n        </Switch>\r\n      </main>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Main;\r\n  ","import React, { Component } from 'react';\nimport Header from './Components/Header.js';\nimport Main from './Components/Main.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n      <Header/>\n      <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}